{"version":3,"sources":["src/Images.ts","src/index.ts"],"names":[],"mappings":"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","file":"src.1d7f2bd3.js","sourceRoot":"..","sourcesContent":["import unicorn from '../images/unicorn.png';\r\nimport mermaid from '../images/mermaid.png';\r\nimport tiana from '../images/tiana.png';\r\nimport bear from '../images/bear.png';\r\nimport deer from '../images/deer.png';\r\n\r\nexport default [\r\n  unicorn,\r\n  mermaid,\r\n  tiana,\r\n  bear,\r\n  deer\r\n]","import allImages from './Images';\r\n\r\nconst canvas = document.getElementsByTagName('canvas')[0];\r\nconst ctx = canvas.getContext('2d')!;\r\nconst clearBtn = document.getElementById('clear')!;\r\nconst changeImageBtn = document.getElementById('changeimage')!;\r\n\r\nconst image = new Image();\r\n\r\nconst allColors = ['red', 'orange', 'yellow', 'limegreen', 'blue', 'pink', 'purple', 'brown', 'white', 'black'];\r\nlet selectedColor = 'red';\r\n\r\nlet selectedImage = allImages[0];\r\n\r\nlet dragging = false;\r\n\r\nloadImage();\r\nsetupColors();\r\n\r\ncanvas.addEventListener('mousedown', ({ clientX, clientY, preventDefault }) => {\r\n  beginPaint(clientX, clientY);\r\n  preventDefault();\r\n});\r\ncanvas.addEventListener('touchstart', e => {\r\n  beginPaint(e.touches[0].clientX, e.touches[0].clientY);\r\n  e.preventDefault();\r\n});\r\ncanvas.addEventListener('mouseup', ({ clientX, clientY, preventDefault }) => {\r\n  endPaint(clientX, clientY);\r\n  preventDefault();\r\n});\r\ncanvas.addEventListener('touchend', e => {\r\n  endPaint(e.touches[0].clientX, e.touches[0].clientY);\r\n  e.preventDefault();\r\n});\r\ncanvas.addEventListener('mousemove', ({ clientX, clientY, preventDefault }) => {\r\n  paint(clientX, clientY);\r\n  preventDefault();\r\n});\r\ncanvas.addEventListener('touchmove', e => {\r\n  paint(e.touches[0].clientX, e.touches[0].clientY);\r\n  e.preventDefault();\r\n});\r\n\r\nclearBtn.addEventListener('click', () => {\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  loadImage();\r\n})\r\n\r\n\r\nchangeImageBtn.addEventListener('click', () => {\r\n  let newImage = '';\r\n  do {\r\n    const index = Math.floor(Math.random() * allImages.length);\r\n    newImage = allImages[index];\r\n  } while (newImage === selectedImage);\r\n\r\n  selectedImage = newImage;\r\n  loadImage();\r\n})\r\n\r\n\r\nfunction loadImage() {\r\n  image.src = selectedImage;\r\n  image.addEventListener('load', () => {\r\n    canvas.width = image.width;\r\n    canvas.height = image.height;\r\n    ctx.drawImage(image, 0, 0);\r\n  });\r\n}\r\n\r\nfunction setupColors() {\r\n  const ul = document.querySelector('.colors')!;\r\n  for (const color of allColors) {\r\n    const li = document.createElement('li');\r\n    li.style.backgroundColor = color;\r\n    li.addEventListener('click', _ => {\r\n      selectedColor = color;\r\n      // Soportar Safari antiguo es lo que tiene\r\n      const colors = document.querySelectorAll('ul.colors li');\r\n      for (let i = 0; i < colors.length; i++)\r\n        colors[i].classList.remove('selected');\r\n      li.classList.add('selected');\r\n    })\r\n    ul.appendChild(li);\r\n  }\r\n  selectedColor = allColors[0];\r\n  document.querySelector('ul.colors li')!.classList.add('selected');\r\n}\r\n\r\nlet lastX: number | undefined = undefined;\r\nlet lastY: number | undefined = undefined;\r\n\r\nfunction toCanvasPoint(clientX: number, clientY: number) {\r\n  const { left, top, width } = canvas.getBoundingClientRect();\r\n\r\n  const unscaledX = clientX - left;\r\n  const unscaledY = clientY - top;\r\n\r\n  // El canvas tiene un max-width: 100% por lo que puede estar escalado\r\n  const scaleRatio = image.width / width;\r\n  const x = unscaledX * scaleRatio;\r\n  const y = unscaledY * scaleRatio;\r\n  return { x, y }\r\n}\r\n\r\nfunction beginPaint(clientX: number, clientY: number) {\r\n  dragging = true;\r\n  const { x, y } = toCanvasPoint(clientX, clientY);\r\n  lastX = x;\r\n  lastY = y;\r\n}\r\n\r\nfunction endPaint(_clientX: number, _clientY: number) {\r\n  dragging = false;\r\n  lastX = undefined;\r\n  lastY = undefined;\r\n}\r\n\r\nfunction paint(clientX: number, clientY: number) {\r\n  if (!dragging)\r\n    return;\r\n\r\n  const { x, y } = toCanvasPoint(clientX, clientY);\r\n\r\n  ctx.fillStyle = selectedColor;\r\n  ctx.lineWidth = 20;\r\n  ctx.lineCap = 'round';\r\n  ctx.lineJoin = 'round';\r\n  ctx.strokeStyle = selectedColor;\r\n\r\n  ctx.beginPath();\r\n\r\n  lastX = lastX || x;\r\n  lastY = lastY || y;\r\n\r\n  ctx.moveTo(lastX, lastY);\r\n  ctx.lineTo(x, y)\r\n  ctx.stroke();\r\n\r\n  ctx.drawImage(image, 0, 0);\r\n\r\n  lastX = x;\r\n  lastY = y;\r\n}"]}